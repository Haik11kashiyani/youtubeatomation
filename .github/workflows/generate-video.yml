name: Generate and Upload Shorts (Sequential)
# Automated Gujarati Rashifal Videos - Daily at 7:00 AM IST

on:
  workflow_dispatch:
    inputs:
      manual_trigger:
        description: 'Manual trigger for testing'
        required: false
        default: 'true'
  schedule:
    # Runs daily at 1:30 AM UTC (7:00 AM IST - India Standard Time)
    # IST is UTC+5:30, so 7:00 AM IST = 1:30 AM UTC
    - cron: '30 1 * * *'

permissions:
  contents: read

jobs:
  build-and-upload:
    name: Generate Videos and Upload to YouTube
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install system dependencies (ffmpeg, ImageMagick, fonts)
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg imagemagick fonts-noto
          ffmpeg -version
          convert --version
          echo "--- ImageMagick policy before ---"
          sudo cat /etc/ImageMagick-6/policy.xml || true
          # Relax ImageMagick policy to allow @args used by MoviePy TextClip
          if [ -f /etc/ImageMagick-6/policy.xml ]; then
            sudo sed -i 's/<policy domain="path" rights="none" pattern="@\*"\/>/<!-- disabled by CI: allow @args for MoviePy -->/g' /etc/ImageMagick-6/policy.xml
          fi
          echo "--- ImageMagick policy after ---"
          sudo cat /etc/ImageMagick-6/policy.xml || true

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install --no-cache-dir -r requirements.txt
          echo "--- Python version ---"
          python --version
          echo "--- Checking MoviePy ---"
          python -c "import moviepy; print('MoviePy version:', moviepy.__version__)"
          python -c "from moviepy.editor import *; print('MoviePy.editor import OK')"
          echo "--- Checking Playwright ---"
          python -c "from playwright.sync_api import sync_playwright; print('Playwright import OK')"

      - name: Install Playwright browsers
        run: |
          playwright install chromium
          playwright install-deps chromium

      - name: List project files
        run: |
          echo "--- Root directory ---"
          ls -la
          echo "--- 12 photos directory ---"
          ls -la "12 photos" || echo "12 photos directory not found"
          echo "--- music directory ---"
          ls -la music || echo "music directory not found"
          echo "--- Checking for rashifal_data.json ---"
          cat rashifal_data.json | head -20 || echo "rashifal_data.json not found"

      - name: Run orchestrate.py (Build + Upload)
        env:
          PYTHONUNBUFFERED: "1"
          YOUTUBE_CLIENT_ID: ${{ secrets.YOUTUBE_CLIENT_ID }}
          YOUTUBE_CLIENT_SECRET: ${{ secrets.YOUTUBE_CLIENT_SECRET }}
          YOUTUBE_REFRESH_TOKEN: ${{ secrets.YOUTUBE_REFRESH_TOKEN }}
        run: |
          python orchestrate.py

      - name: Find generated videos
        if: always()
        id: find_videos
        run: |
          shopt -s nullglob
          vids=( outputs/*.mp4 outputs/*.mov outputs/*.mkv )
          echo "Found videos: ${vids[@]}"
          if [ ${#vids[@]} -gt 0 ]; then
            echo "videos_found=true" >> "$GITHUB_OUTPUT"
          else
            echo "videos_found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Upload generated videos as artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rashifal-videos-${{ github.run_number }}
          path: |
            outputs/*.mp4
            outputs/*.mov
            outputs/*.mkv
          if-no-files-found: warn
          retention-days: 7

      - name: Upload logs and temp files
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: run-logs-${{ github.run_number }}
          path: |
            **/*.log
            temp_images/*.png
          if-no-files-found: ignore
          retention-days: 3

      - name: Workflow summary
        if: always()
        run: |
          echo "## ðŸŽ¬ Gujarati Rashifal Automation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Run Date:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "**Workflow:** ${{ github.workflow }}" >> $GITHUB_STEP_SUMMARY
          echo "**Run Number:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -d outputs ]; then
            VIDEO_COUNT=$(ls -1 outputs/*.mp4 2>/dev/null | wc -l)
            echo "**Videos Generated:** $VIDEO_COUNT" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Videos Generated:** 0 (outputs directory not found)" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Check artifacts above for generated videos and logs" >> $GITHUB_STEP_SUMMARY
